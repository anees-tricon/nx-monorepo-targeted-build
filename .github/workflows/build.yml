name: Targeted Deployment

on:
  push:
    branches:
      - main
    tags:
      - product/*/[1-9]+.[0-9]+.[0-9]+ #product/u-b/x.x.x
      - search/*/[1-9]+.[0-9]+.[0-9]+ #search/u-b/x.x.x
      - release/*/[1-9]+.[0-9]+.[0-9]+ #release/u-b/x.x.x
env:
  DAY_OF_WEEK: Monday

jobs:
  build-deploy-product:
    name: build_deploy_product
    runs-on: ubuntu-latest
    if: startsWith (github.ref, 'refs/tags/product')
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.15.1'
      - run: npm install -g npm@8.1.3
      - run: npm i -g nx
      - run: npm install
      - run: npx nx run-many --target=test --all
      - run: nx build product

  build-deploy-search:
    name: build_deploy_search
    runs-on: ubuntu-latest
    if: startsWith (github.ref, 'refs/tags/search')
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.15.1'
      - run: npm install -g npm@8.1.3
      - run: npm i -g nx
      - run: npm install
      - run: npx nx run-many --target=test --all
      - run: nx build search

  tags_test:
    name: tags_test
    runs-on: ubuntu-latest
    if: startsWith (github.ref, 'refs/tags/release') #release/1.0.0
    steps:
      - name: get the information from the tag
        uses: rishabhgupta/split-by@v1
        id: split
        with:
          string: ${{github.ref_name}}
          split-by: '/'
        env:
          stage: ${{ steps.split.outputs._1}}
      - name: set the app name and stage
        id: test
        run: echo "app $app stage $stage"
        env:
          app: ${{ steps.split.outputs._0}}
          stage: ${{ steps.split.outputs._1}}
      - run: echo "${{ steps.split.outputs._0}}" # app name -> product/search
      - run: echo "${{ steps.split.outputs._1}}"
      - name: get env from the stage
        run: echo "app $app stage $stage"
        if: startsWith ({{steps.test.stage}}, 'u') # u-b,u-g
        env:
          environment: uat
      # if: startsWith ({{steps.split.outputs._1}}, 'p') # p-b,p-g
      # env:
      #   environment: prod

      # - run: npm run ${{steps.split.outputs._0}}:build:lambda:uat
      # - run: npm run ${{steps.split.outputs._0}}:deploy:lambda:${{steps.split.outputs._1}}

  Env_variables_test:
    name: Env_variables_test
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    env:
      Greeting: Hello
    steps:
      - name: "Say Hello Mona it's Monday"
        run: echo "$Greeting $First_Name. Today is $DAY_OF_WEEK!"
        env:
          First_Name: Mona

  Build_Test_Analyse_Merge:
    name: build_test_analyse
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/develop' }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.15.1'
      - run: npm install -g npm@8.1.3
      - run: npm i -g nx
      - run: npm install
      - run: npx nx affected:build --base=origin/main~1 --head=origin/main
      - run: npx nx run-many --target=test --all
      # - name: Get the version
      #   id: get_version
      #   run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      # - run: echo $VERSION
